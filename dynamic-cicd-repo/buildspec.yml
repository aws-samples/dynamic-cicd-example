version: 0.2

phases:
  install:
    runtime-versions:
      golang: 1.13
      nodejs: 10
    commands:
      - export GO111MODULE="on"
      - go get -u golang.org/x/lint/golint
  pre_build:
    commands:
      #-----------------------------  API  ----------------------------#
      - cd hello-world
      # Fetch all dependencies
      - go get -t 

      # # Ensure code passes all lint tests
      # - golint -set_exit_status

      # Check the Go code for common problems with 'go vet'
      # - go vet .

      # Run all tests included with our application
      # - go test .
      - cd ..
      
      #-----------------------------  appfrontend  ----------------------------#
      - echo Installing source NPM dependencies...
      - npm install
      
  build:
    commands:
      # Build our go application
      - cd hello-world
      - go build
      - cd ..

      - cd appfrontend
      - npm run build
      - codebuildid="$(echo $CODEBUILD_BUILD_ID | cut -d':' -f2)"
      - echo $codebuildid
      - aws s3 cp --recursive ./build s3://<oArtifactBucket>/$codebuildid/frontend/
      - cd ..
      - aws cloudformation package --template-file template.yaml --s3-bucket <oArtifactBucket> --s3-prefix $codebuildid --output-template-file packaged.yaml

  post_build:
    commands:
      - echo "SAM packaging completed on `date`"
      - echo $CODEBUILD_SOURCE_VERSION
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - echo $CODEBUILD_BUILD_ID
      - echo $CODEBUILD_WEBHOOK_EVENT
      - now=$(date)
      - echo $now
      - |
         aws dynamodb put-item \
           --table-name <oCicdDynamoTable> \
           --item '{"tag": {"S":"'"$CODEBUILD_WEBHOOK_TRIGGER"'"},"commitid": {"S":"'"$CODEBUILD_SOURCE_VERSION"'"},"buildid": {"S":"'"$CODEBUILD_BUILD_ID"'"},"timestamp": {"S":"'"$now"'"}}' \
           
artifacts:
  files:
    - packaged.yaml
  discard-paths: yes  
  secondary-artifacts:
    nodejs_artifacts:
      base-directory: frontend
      files:
        - '**/*'